name: Run tests

on: [ pull_request ]

jobs:
  run_tests:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      database:
        image: mariadb
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
          MARIADB_DATABASE: movary
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |
          echo "DATABASE_MODE=mysql" > "test.env"
          echo "DATABASE_MYSQL_HOST=127.0.0.1" >> "test.env"
          echo "DATABASE_MYSQL_PORT=3306" >> "test.env"
          echo "DATABASE_MYSQL_USER=root" >> "test.env"
          echo "DATABASE_MYSQL_NAME=movary" >> "test.env"
          echo "DATABASE_MYSQL_PASSWORD=" >> "test.env"

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Downloads and runs the Jetbrains HTTP Client CLI
        run: |
          curl -f -L -o ijhttp.zip "https://jb.gg/ijhttp/latest"
          unzip ijhttp.zip

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: json, mbstring, pdo
          tools: composer, phpcs, phpstan, phpunit:9.6.17, psalm:4.30, cs2pr, phinx:0.15.5

      - name: Install composer package
        uses: "ramsey/composer-install@v3"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run PHPCs
        run: phpcs --standard=./settings/phpcs.xml --report=checkstyle -q ./src ./tests | cs2pr

      - name: Run PHPStan
        run: phpstan analyse -c ./settings/phpstan.neon

      - name: Run Psalm
        run: psalm -c ./settings/psalm.xml --show-info=false --output-format=github

      - name: Run PHPUnit
        run: phpunit -c ./settings/phpunit.xml --testsuite unit

      - name: Build docker development image
        run: docker build --target development --tag movary:ci ./build/php/

      - name: Run development image
        run: docker run --name movary --rm -d -v /home/runner/work/movary/movary:/app --env-file=test.env --network "host" movary:ci

      - name: Prepare for the tests
        run: |
          docker exec movary php bin/console.php database:migration:migrate &&
          docker exec movary php bin/console.php user:create testUser@domain.com password1234 testUser true

      - name: Run the HTTP tests
        run: |
          alias ijhttp="./ijhttp/ijhttp"
          ./ijhttp/ijhttp tests/rest/api/authentication.http --env-file tests/rest/api/http-client.env.json --env CI
          
      - name: Remove development image
        run: docker rm -f movary
