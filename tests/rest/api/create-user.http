POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "myname@domain.com",
  "username": "Averycoolusername",
  "password": "Mysecurepassword",
  "repeatPassword": "Mysecurepassword"
}

> {%
 client.test("User created", function() {
    client.assert(response.status === 200, "Response status is not 200");
 });
%}

###

POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "",
  "username": "",
  "password": "",
  "repeatPassword": ""
}

> {%
    client.test("Missing input", function() {
        client.assert(response.status === 400, "Response status is not 200");
        client.assert(response.body['error'] === 'MissingInput', 'Response error was not as expected');
        client.assert(response.body['message'] === 'Email, username, password or the password repeat is missing', 'Response was not as expected');
    });
%}

###

POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "myname@domain.com",
  "username": "Averycoolusername",
  "password": "Mysecurepassword",
  "repeatPassword": "Adifferentpassword"
}

> {%
    client.test("Missing input", function() {
        client.assert(response.status === 400, "Response status is not 200");
        client.assert(response.body['error'] === 'PasswordsNotEqual', 'Response error was not as expected');
        client.assert(response.body['message'] === 'The repeated password is not the same as the password', 'Response was not as expected');
    });
%}

###

POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "myname@domain.com",
  "username": "MyUniqueUsername",
  "password": "Mysecurepassword",
  "repeatPassword": "Mysecurepassword"
}

> {%
    client.test("Missing input", function() {
        client.assert(response.status === 400, "Response status is not 200");
        client.assert(response.body['error'] === 'EmailNotUnique', 'Response error was not MissingInput');
        client.assert(response.body['message'] === 'Email is already taken', 'Response was not as expected');
    });
%}

###

POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "myuniqueaddress@domain.com",
  "username": "MyUniqueUsername",
  "password": "short",
  "repeatPassword": "short"
}

> {%
    client.test("Missing input", function() {
        client.assert(response.status === 400, "Response status is not 200");
        client.assert(response.body['error'] === 'PasswordTooShort', 'Response error was not MissingInput');
        client.assert(response.body['message'] === 'Password must be at least 8 characters', 'Response was not as expected');
    });
%}

###

POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "myuniqueaddress@domain.com",
  "username": "An invalid username!!!!",
  "password": "Mysecurepassword",
  "repeatPassword": "Mysecurepassword"
}

> {%
    client.test("Missing input", function() {
        client.assert(response.status === 400, "Response status is not 200");
        client.assert(response.body['error'] === 'UsernameInvalidFormat', 'Response error was not as expected');
        client.assert(response.body['message'] === 'Username can only contain letters or numbers', 'Response was not as expected');
    });
%}

###

POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "myuniqueaddress@domain.com",
  "username": "Averycoolusername",
  "password": "Mysecurepassword",
  "repeatPassword": "Mysecurepassword"
}

> {%
    client.test("Missing input", function() {
        client.assert(response.status === 400, "Response status is not 200");
        client.assert(response.body['error'] === 'UsernameNotUnique', 'Response error was not as expected');
        client.assert(response.body['message'] === 'Username is already taken', 'Response was not as expected');
    });
%}

###

POST http://127.0.0.1/api/create-user
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
X-Movary-Client: RestAPI Test

{
  "email": "myuniqueaddress@domain.com",
  "username": "MyUniqueUsername",
  "password": "short",
  "repeatPassword": "short"
}

> {%
    client.test("Missing input", function() {
        client.assert(response.status === 400, "Response status is not 200");
        client.assert(response.body['error'] === 'PasswordTooShort', 'Response error was not MissingInput');
        client.assert(response.body['message'] === 'Password must be at least 8 characters', 'Response was not as expected');
    });
%}

